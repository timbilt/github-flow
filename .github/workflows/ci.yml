name: CI
on:
  pull_request:
    branches: [develop, master] # when a PR into develop is created
  push:
    branches: [develop, master] # when a PR into develop is merged
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache node_modules
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Use NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: "16.x"
      - name: Log cache output
        run: |
          echo "${{ toJSON(steps.yarn-cache.outputs) }}"
          pwd
          ls
      - name: Install dependencies
        run: yarn install --immutable --immutable-cache --check-cache
      - name: Check formatting
        run: yarn format:check
      - name: Run tests
        env:
          CI: true
        run: yarn test -- --coverage
      - name: Upload test coverage
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage
          path: coverage
      - name: Build Project
        if: github.event_name == 'push'
        run: yarn build
      - name: Upload build folder
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build
      - name: Create release
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy to Staging
        env:
          SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
        if: github.event_name == 'push'
        run: npx surge --project ./build --domain upset-jump.surge.sh
